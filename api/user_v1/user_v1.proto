syntax = "proto3";

package user_v1;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/alexandrhub/auth/pkg/user_v1;user_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Auth"
    version: "1.0.0"
    contact: {
      name: "Alexandr"
    };
  };

  host: "localhost:8080",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service UserV1 {
  // Create User
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
    option (google.api.http) = {
      post: "/users/v1",
      body: "*",
    };
  }
  // Update User
  rpc UpdateUser (UpdateUserRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      patch: "/users/v1",
      body: "*",
    };
  }
  // Get User
  rpc GetUser (GetUserRequest) returns (GetUserResponse){
    option (google.api.http) = {
      get: "/users/v1",
    };
  }
  // Delete User
  rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      delete: "/users/v1",
    };
  }
}

enum Role {
  UNKNOWN = 0;
  ADMIN = 1;
  USER = 2;
}

message User {
  UserCreate user_create = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
}

message UserCreate {
  UserUpdate user_update = 1;
  string password = 2;
}

message UserUpdate {
  int64 id = 1;
  string name = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string email = 3 [(validate.rules).string = {email: true}];
  Role role = 4;
}

message CreateUserRequest {
  UserCreate info = 1;
}

message CreateUserResponse {
  int64 id = 1;
}

message UpdateUserRequest {
  UserUpdate info = 1;
}

message GetUserRequest {
  int64 id = 1;
}

message GetUserResponse {
  User info = 1;
}

message DeleteUserRequest {
  int64 id = 1;
}

